% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/num_users_by_timeperiod.R
\name{num_users_by_timeperiod}
\alias{num_users_by_timeperiod}
\title{Plot number of unique users that tweeted per hour, day or month}
\usage{
num_users_by_timeperiod(
  sqlite_con,
  period,
  from,
  to,
  return_data = FALSE,
  exclude_RT = FALSE,
  ...
)
}
\arguments{
\item{sqlite_con}{\href{https://rsqlite.r-dbi.org/reference/sqliteconnection-class}{Class SQLiteConnection}
object that is a connection to an SQLite .db file created by the
\href{https://github.com/QUT-Digital-Observatory/tidy_tweet}{tidy-tweet package}.
The database contains a collection of tweets in relational tables. This can
be created with \code{\link[=connect_to_sqlite_db]{connect_to_sqlite_db()}}.}

\item{period}{Time period for which the tweet frequency will be calculated.
Accepted values are \code{"hour"}, \code{"day"}, or \code{"month"}. Defaults to \code{"day"}.}

\item{from}{Optional parameter to subset the data to tweets that were created
on or after the specified date and/or time in \href{https://en.wikipedia.org/wiki/Coordinated_Universal_Time}{Coordinated Universal Time (UCT)}.

For hourly charts, provide a character string in the format
\code{"\%Y-\%m-\%d \%H:\%M:\%S"}. For example \code{"2022-06-20 06:00:00"}

For daily charts, provide a character string in the format
\code{"\%Y-\%m-\%d"}. For example \code{"2022-06-20"}

For monthly charts, provide a character string in the format
\code{"\%Y-\%m"}. For example \code{"2022-06"}

Recommended subsets for each time period in order to ensure clear
visualisations are as follows:
\itemize{
\item Hourly: 1-3 days, ideally no more than 7 days;
\item Daily: Up to 1 month;
\item Monthly: 1-2 years.
}}

\item{to}{Optional parameter to subset the data to tweets that were created
on or before the specified date and/or time in \href{https://en.wikipedia.org/wiki/Coordinated_Universal_Time}{Coordinated Universal Time (UCT)}.

For hourly charts, provide a character string in the format
\code{"\%Y-\%m-\%d \%H:\%M:\%S"}. For example \code{"2022-06-20 06:00:00"}

For daily charts, provide a character string in the format
\code{"\%Y-\%m-\%d"}. For example \code{"2022-06-20"}

For monthly charts, provide a character string in the format
\code{"\%Y-\%m"}. For example \code{"2022-06"}

Recommended subsets for each time period in order to ensure clear
visualisations are as follows:
\itemize{
\item Hourly: 1-3 days, ideally no more than 7 days;
\item Daily: Up to 1 month;
\item Monthly: 1-2 years.
}}

\item{return_data}{Should the data underlying the chart be returned?
The default is \code{FALSE}. If \code{return_data = TRUE}, the data can be accessed
in the second element, \code{data}, of the returned list.}

\item{exclude_RT}{Should retweets be excluded from the calculations?
The default is \code{FALSE}.}

\item{...}{Other arguments passed on to \code{\link[ggplot2:geom_path]{ggplot2::geom_line()}} for hourly and
daily charts, or \code{\link[ggplot2:geom_bar]{ggplot2::geom_col()}} for monthly charts.}
}
\value{
ggplot2 plot. If \code{return_data = TRUE}, returns a named list with the
first element, \code{chart}, being a ggplot2 plot, and the second element,
\code{data}, being the underlying data for the ggplot2 plot in the form of a
data frame.
}
\description{
Create a ggplot2 chart of the number of unique users that
tweeted per hour, day or month

Hourly and daily charts will be plotted as a line graph, and monthly charts
will be plotted as a bar graph.
}
\examples{
\dontrun{

num_users_by_timeperiod(sqlite_con, period = "hour",
from = "2022-06-20 06:00:00", to = "2022-06-21 06:00:00")

num_users_by_timeperiod(sqlite_con, period = "day",
from = "2022-06-20")

my_plot <- num_users_by_timeperiod(sqlite_con, period = "day",
to = "2022-06-30")

my_plot <- num_users_by_timeperiod(sqlite_con, period = "month")

my_plot <- num_users_by_timeperiod(sqlite_con, period = "month",
  to = "2022-07")

num_users_by_timeperiod(sqlite_con, period = "day", colour = "red")

num_users_by_timeperiod(sqlite_con, period = "month", fill = "blue")

results <- num_users_by_timeperiod(sqlite_con, period = "hour",
  return_data = TRUE)

results <- num_users_by_timeperiod(sqlite_con, period = "hour",
  return_data = TRUE, exclude_RT = TRUE)

}

}
